{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fokin\\\\Documents\\\\Coding\\\\16-9 React Quiz\\\\quizzical\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Question from \"./Question\";\nimport { nanoid } from \"nanoid\";\nimport { decode } from \"html-entities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz(props) {\n  _s();\n  const [quizData, setQuizData] = React.useState(getInitialData());\n  const [numberOfCorrectResults, setNumberOfCorrectResults] = React.useState(0);\n  const {\n    allQuestions,\n    isCompleted,\n    setIsCompleted,\n    restarted,\n    setRestarted\n  } = props;\n  function getInitialData() {\n    const newArr = [];\n    for (let i = 0; i < props.allQuestions.length; i++) {\n      newArr.push({\n        name: `question${i}`,\n        correctAnswer: decode(props.allQuestions[i].correctAnswer),\n        isChosen: \"\",\n        isCorrect: false,\n        isWrong: false\n      });\n    }\n    return newArr;\n  }\n  function updateData(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setQuizData(prevData => prevData.map(data => {\n      return name === data.name ? {\n        ...data,\n        isChosen: value\n      } : data;\n    }));\n  }\n  function checkAnswers() {\n    const allCorrectAnswers = [];\n    props.allQuestions.map(q => {\n      allCorrectAnswers.push(q.correctAnswer);\n    });\n    for (let i = 0; i < allCorrectAnswers.length; i++) {\n      if (allCorrectAnswers[i] !== quizData[i].isChosen) {\n        setQuizData(prevData => prevData.map(data => {\n          return allCorrectAnswers[i] === data.correctAnswer ? {\n            ...data,\n            isWrong: !data.isWrong\n          } : data;\n        }));\n      } else if (allCorrectAnswers[i] === quizData[i].isChosen) {\n        setQuizData(prevData => prevData.map(data => {\n          return allCorrectAnswers[i] === data.correctAnswer ? {\n            ...data,\n            isCorrect: !data.isCorrect\n          } : data;\n        }));\n      } else if (quizData[i].isChosen === \"\") {\n        return;\n      }\n    }\n  }\n  React.useEffect(() => {\n    const numberOfCorrectResults = [];\n    quizData.map(q => q.isCorrect ? numberOfCorrectResults.push(q) : \"\");\n    setNumberOfCorrectResults(numberOfCorrectResults.length);\n  }, [isCompleted]);\n  function renderResults(event) {\n    event.preventDefault();\n    checkAnswers();\n    setIsCompleted(true);\n  }\n  function resetQuiz() {\n    event.preventDefault();\n    setRestarted(prevData => !prevData);\n    setIsCompleted(false);\n  }\n  React.useEffect(() => {\n    setQuizData(getInitialData());\n  }, [props.allQuestions]);\n\n  // console.log(quizData)\n\n  const allQuestionsElement = props.allQuestions.map(q => {\n    const {\n      question,\n      allAnswers\n    } = q;\n    const index = props.allQuestions.indexOf(q);\n    return /*#__PURE__*/_jsxDEV(Question, {\n      question: question,\n      allAnswers: allAnswers,\n      quizData: quizData,\n      name: \"question\" + index,\n      updateData: updateData,\n      questionNumber: index,\n      isCompleted: isCompleted\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"quiz--form\",\n    children: [allQuestionsElement, isCompleted && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"quiz--result\",\n      children: [\"You scored \", numberOfCorrectResults, \" of \", quizData.length, \" correct answers\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }, this), !isCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quiz--btn\",\n      onClick: renderResults,\n      children: \"CHECK ANSWERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 30\n    }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"quiz--btn\",\n      onClick: resetQuiz,\n      children: \"CONTINUE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"i5+onGVpvOMQLmg5yVHnMkJ1NgE=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","Question","nanoid","decode","Quiz","props","quizData","setQuizData","useState","getInitialData","numberOfCorrectResults","setNumberOfCorrectResults","allQuestions","isCompleted","setIsCompleted","restarted","setRestarted","newArr","i","length","push","name","correctAnswer","isChosen","isCorrect","isWrong","updateData","event","value","target","prevData","map","data","checkAnswers","allCorrectAnswers","q","useEffect","renderResults","preventDefault","resetQuiz","allQuestionsElement","question","allAnswers","index","indexOf"],"sources":["C:/Users/fokin/Documents/Coding/16-9 React Quiz/quizzical/src/components/Quiz.js"],"sourcesContent":["import React from \"react\"\nimport Question from \"./Question\"\nimport { nanoid } from \"nanoid\"\nimport { decode } from \"html-entities\"\n\nexport default function Quiz(props) {\n\n    const [quizData, setQuizData] = React.useState(getInitialData())\n    const [numberOfCorrectResults, setNumberOfCorrectResults] = React.useState(0)\n\n    const { allQuestions, isCompleted, setIsCompleted, restarted, setRestarted } = props\n\n    function getInitialData() {\n        const newArr = []\n        for (let i = 0; i < props.allQuestions.length; i++) {\n            newArr.push({\n                name: `question${i}`,\n                correctAnswer: decode(props.allQuestions[i].correctAnswer),\n                isChosen: \"\",\n                isCorrect: false,\n                isWrong: false,\n            })\n        }\n        return newArr\n    }\n\n    function updateData(event) {\n        const { name, value } = event.target\n        setQuizData(prevData => prevData.map(data => {\n            return name === data.name ? {\n                ...data,\n                isChosen: value,\n            } : data\n        }))\n    }\n\n    function checkAnswers() {\n        const allCorrectAnswers = []\n        props.allQuestions.map(q => {\n            allCorrectAnswers.push(q.correctAnswer)\n        })\n\n        for (let i = 0; i < allCorrectAnswers.length; i++) {\n\n            if (allCorrectAnswers[i] !== quizData[i].isChosen) {\n                setQuizData(prevData => prevData.map(data => {\n                    return (allCorrectAnswers[i] === data.correctAnswer) ?\n                        {\n                            ...data,\n                            isWrong: !data.isWrong\n                        } : data\n                }))\n            } else if (allCorrectAnswers[i] === quizData[i].isChosen) {\n                setQuizData(prevData => prevData.map(data => {\n                    return (allCorrectAnswers[i] === data.correctAnswer) ?\n                        {\n                            ...data,\n                            isCorrect: !data.isCorrect\n                        } : data\n                }))\n            } else if (quizData[i].isChosen === \"\") {\n                return\n            }\n        }\n    }\n\n    React.useEffect(() => {\n        const numberOfCorrectResults = []\n        quizData.map(q => q.isCorrect ? numberOfCorrectResults.push(q) : \"\")\n        setNumberOfCorrectResults(numberOfCorrectResults.length)\n    }, [isCompleted])\n\n    function renderResults(event) {\n        event.preventDefault()\n        checkAnswers()\n        setIsCompleted(true)\n    }\n\n    function resetQuiz() {\n        event.preventDefault()\n        setRestarted(prevData => !prevData)\n        setIsCompleted(false)\n    }\n\n    React.useEffect(() => {\n        setQuizData(getInitialData())\n    }, [props.allQuestions])\n\n    // console.log(quizData)\n\n    const allQuestionsElement = props.allQuestions.map(q => {\n        const { question, allAnswers } = q\n        const index = props.allQuestions.indexOf(q)\n        return (\n            <Question\n                key={nanoid()}\n                question={question}\n                allAnswers={allAnswers}\n                quizData={quizData}\n                name={\"question\" + index}\n                updateData={updateData}\n                questionNumber={index}\n                isCompleted={isCompleted}\n            />\n        )\n    })\n\n    return (\n        <form className=\"quiz--form\">\n            {allQuestionsElement}\n            {isCompleted && <h3 className=\"quiz--result\">You scored {numberOfCorrectResults} of {quizData.length} correct answers</h3>}\n            {!isCompleted && <button className=\"quiz--btn\" onClick={renderResults}>CHECK ANSWERS</button>}\n            {isCompleted && <button className=\"quiz--btn\" onClick={resetQuiz}>CONTINUE</button>}\n        </form>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}