{"ast":null,"code":"import _toConsumableArray from\"C:/Users/fokin/Documents/Coding/16-9 React Quiz/quizzical/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/fokin/Documents/Coding/16-9 React Quiz/quizzical/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import Welcome from\"./components/Welcome\";import Quiz from\"./components/Quiz\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function App(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),started=_React$useState2[0],setStarted=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),allQuestions=_React$useState4[0],setAllQuestions=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isCompleted=_React$useState6[0],setIsCompleted=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),restarted=_React$useState8[0],setRestarted=_React$useState8[1];//Getting data from the API\n//Rearranging data for future use \nReact.useEffect(function(){fetch(\"https://opentdb.com/api.php?amount=5&difficulty=easy&type=multiple\").then(function(res){return res.json();}).then(function(data){return setAllQuestions(data.results.map(function(obj){var question=obj.question,correct_answer=obj.correct_answer,incorrect_answers=obj.incorrect_answers;var allAnswers=[correct_answer].concat(_toConsumableArray(incorrect_answers));return{question:question,allAnswers:shuffleResults(allAnswers),correctAnswer:correct_answer};}));});},[restarted]);//Shuffling order of answers \nfunction shuffleResults(arr){for(var i=arr.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=arr[i];arr[i]=arr[j];arr[j]=temp;}return arr;}function startGame(){setStarted(true);}return/*#__PURE__*/_jsx(\"div\",{children:started===false?/*#__PURE__*/_jsx(Welcome,{startGame:startGame}):/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(Quiz,{allQuestions:allQuestions,isCompleted:isCompleted,setIsCompleted:setIsCompleted,setStarted:setStarted,restarted:restarted,setRestarted:setRestarted})})});}// Some ToDos for the project development: \n// 1. Separate DataFetcher in a separate component (using render props?)\n// 2. Error handling (catch err and control it in state)\n// 3. Add a \"Loading...\" screen while the data is loading","map":{"version":3,"names":["React","Welcome","Quiz","App","useState","started","setStarted","allQuestions","setAllQuestions","isCompleted","setIsCompleted","restarted","setRestarted","useEffect","fetch","then","res","json","data","results","map","obj","question","correct_answer","incorrect_answers","allAnswers","shuffleResults","correctAnswer","arr","i","length","j","Math","floor","random","temp","startGame"],"sources":["C:/Users/fokin/Documents/Coding/16-9 React Quiz/quizzical/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Welcome from \"./components/Welcome\"\nimport Quiz from \"./components/Quiz\"\n\nexport default function App() {\n\n    const [started, setStarted] = React.useState(false)\n    const [allQuestions, setAllQuestions] = React.useState([])\n    const [isCompleted, setIsCompleted] = React.useState(false)\n    const [restarted, setRestarted] = React.useState(false)\n\n    //Getting data from the API\n    //Rearranging data for future use \n    React.useEffect(() => {\n        fetch(\"https://opentdb.com/api.php?amount=5&difficulty=easy&type=multiple\")\n            .then(res => res.json())\n            .then(data => setAllQuestions(data.results.map(obj => {\n                const { question, correct_answer, incorrect_answers } = obj\n                const allAnswers = [correct_answer, ...incorrect_answers]\n                return {\n                    question,\n                    allAnswers: shuffleResults(allAnswers),\n                    correctAnswer: correct_answer\n                }\n            })))\n    }, [restarted])\n\n    //Shuffling order of answers \n    function shuffleResults(arr) {\n        for (let i = arr.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let temp = arr[i];\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n        return arr\n    }\n\n    function startGame() {\n        setStarted(true)\n    }\n\n    return (\n        <div>\n            {\n                started === false ?\n                    <Welcome startGame={startGame} /> :\n                    <section>\n                        <Quiz allQuestions={allQuestions}\n                            isCompleted={isCompleted}\n                            setIsCompleted={setIsCompleted}\n                            setStarted={setStarted}\n                            restarted={restarted}\n                            setRestarted={setRestarted}\n                             />\n                    </section>\n            }\n        </div>\n    )\n}\n\n// Some ToDos for the project development: \n// 1. Separate DataFetcher in a separate component (using render props?)\n// 2. Error handling (catch err and control it in state)\n// 3. Add a \"Loading...\" screen while the data is loading "],"mappings":"sSAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,QAAO,KAAM,sBAAsB,CAC1C,MAAOC,KAAI,KAAM,mBAAmB,4CAEpC,cAAe,SAASC,IAAG,EAAG,CAE1B,oBAA8BH,KAAK,CAACI,QAAQ,CAAC,KAAK,CAAC,oDAA5CC,OAAO,qBAAEC,UAAU,qBAC1B,qBAAwCN,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC,qDAAnDG,YAAY,qBAAEC,eAAe,qBACpC,qBAAsCR,KAAK,CAACI,QAAQ,CAAC,KAAK,CAAC,qDAApDK,WAAW,qBAAEC,cAAc,qBAClC,qBAAkCV,KAAK,CAACI,QAAQ,CAAC,KAAK,CAAC,qDAAhDO,SAAS,qBAAEC,YAAY,qBAE9B;AACA;AACAZ,KAAK,CAACa,SAAS,CAAC,UAAM,CAClBC,KAAK,CAAC,oEAAoE,CAAC,CACtEC,IAAI,CAAC,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAAAG,IAAI,QAAIV,gBAAe,CAACU,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,SAAAC,GAAG,CAAI,CAClD,GAAQC,SAAQ,CAAwCD,GAAG,CAAnDC,QAAQ,CAAEC,cAAc,CAAwBF,GAAG,CAAzCE,cAAc,CAAEC,iBAAiB,CAAKH,GAAG,CAAzBG,iBAAiB,CACnD,GAAMC,WAAU,EAAIF,cAAc,4BAAKC,iBAAiB,EAAC,CACzD,MAAO,CACHF,QAAQ,CAARA,QAAQ,CACRG,UAAU,CAAEC,cAAc,CAACD,UAAU,CAAC,CACtCE,aAAa,CAAEJ,cACnB,CAAC,CACL,CAAC,CAAC,CAAC,GAAC,CACZ,CAAC,CAAE,CAACZ,SAAS,CAAC,CAAC,CAEf;AACA,QAASe,eAAc,CAACE,GAAG,CAAE,CACzB,IAAK,GAAIC,EAAC,CAAGD,GAAG,CAACE,MAAM,CAAG,CAAC,CAAED,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CACrC,GAAIE,EAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,EAAIL,CAAC,CAAG,CAAC,CAAC,CAAC,CAC3C,GAAIM,KAAI,CAAGP,GAAG,CAACC,CAAC,CAAC,CACjBD,GAAG,CAACC,CAAC,CAAC,CAAGD,GAAG,CAACG,CAAC,CAAC,CACfH,GAAG,CAACG,CAAC,CAAC,CAAGI,IAAI,CACjB,CACA,MAAOP,IAAG,CACd,CAEA,QAASQ,UAAS,EAAG,CACjB9B,UAAU,CAAC,IAAI,CAAC,CACpB,CAEA,mBACI,qBAEQD,OAAO,GAAK,KAAK,cACb,KAAC,OAAO,EAAC,SAAS,CAAE+B,SAAU,EAAG,cACjC,sCACI,KAAC,IAAI,EAAC,YAAY,CAAE7B,YAAa,CAC7B,WAAW,CAAEE,WAAY,CACzB,cAAc,CAAEC,cAAe,CAC/B,UAAU,CAAEJ,UAAW,CACvB,SAAS,CAAEK,SAAU,CACrB,YAAY,CAAEC,YAAa,EACxB,EACD,EAEhB,CAEd,CAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}